@{
    ViewBag.Title = "MemberPage";
}
<div class="row">&nbsp;</div>
<div class="row">
    <!-- Nav tabs -->
    <ul class="nav nav-tabs">
        <li class="active"><a href="#BeAssignedUnfinished" data-toggle="tab">Chưa hoàn thành</a></li>
        <li><a href="#BeAssignedFinished" data-toggle="tab">Đã hoàn thành</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div class="tab-pane active" id="BeAssignedUnfinished">
            <div class="row">&nbsp;</div>
            <div id="BeAssignedUnfinishedGrid"></div>
        </div>
        <div class="tab-pane" id="BeAssignedFinished">
            <div class="row">&nbsp;</div>
            <div id="BeAssignedFinishedGrid"></div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script id="proposalCodeTemplate" type="text/x-kendo-tmpl">
        <a href="/chinh-sua-de-xuat/#= Id #" class="label label-primary">#= ProposalCode #</a>
    </script>
    <script id="approveStatusTemplate" type="text/x-kendo-tmpl">
        # if (Approved) { #
        <span class="label label-success">
            Đã duyệt
        </span>
        # } else {#
        <span class="label label-warning">
            Chưa duyệt
        </span>
        # } #
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            implementerDepartmentDataSource.read();
            implementerUserDataSource.read();
            progressStatusDataSource.read();
            //----------Tab 1-----------//
            var beAssignedUnfinishedDataSource = new kendo.data.DataSource({
                autoSync: true,
                transport: {
                    read: {
                        url: "/Home/GetMaterials",
                        type: "post"
                    },
                    update: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    destroy: {
                        url: "/Home/DeleteMaterial",
                        type: "post",
                    },
                    create: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return {
                                materials: kendo.stringify(options.models)
                            };
                        } else {
                            return {
                                pageNumber: options.page,
                                pageSize: options.pageSize,
                                command: "BeAssignedUnfinished"
                            };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                serverPaging: true,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: false, defaultValue: 0 },
                            MaterialProposalCode: { editable: false, type: "string", validation: { required: true } },
                            MaterialName: { editable: false, type: "string", validation: { required: true } },
                            Description: { type: "string" },
                            Quantity: { type: "number" },
                            InventoryQuantity: { type: "number" },
                            Unit: { type: "string", validation: { required: true } },
                            Used: { type: "boolean" },
                            UsingPurpose: { type: "string" },
                            Deadline: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            StartDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ApproveDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            FinishDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            DeliveryDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ProgressStatusId: { type: "number" },
                            Note: { type: "string" },
                            ImplementerDepartmentId: { type: "number" },
                            ImplementerUserName: { type: "string" },
                            ApproveStatus: { type: "number", editable: false },
                            Finished: { type: "boolean", editable: false }
                        }
                    },
                    total: "total",
                    data: "data"
                }
            });

            $("#BeAssignedUnfinishedGrid").kendoGrid({
                dataSource: beAssignedUnfinishedDataSource,
                navigatable: true,
                pageable: true,
                groupable: {
                    messages: {
                        empty: "Kéo thả tên cột vào đây để xem theo nhóm."
                    }
                },
                //toolbar: [{ name: "create", text: "Thêm" }],
                columns: [
                    { field: "MaterialProposalCode", title: "Mã đề xuất", template: "<a href='/chinh-sua-de-xuat/#= MaterialProposalId #' class='label label-primary'>#= MaterialProposalCode #</a>", width: 100 },
                    { field: "MaterialName", template: "<a href='/Home/Material/#= Id #' class='label label-success pull-right'>Xem</a> #= MaterialName #", title: "Tên vật tư", width: 200 },
                    { field: "ApproveDate", format: '{0:dd/MM/yyyy}', title: "Ngày duyệt", width: 150 },
                    { field: "StartDate", format: '{0:dd/MM/yyyy}', title: "Ngày giao", width: 150 },
                    { field: "Deadline", format: '{0:dd/MM/yyyy}', title: "Hạn chót", width: 150 },
                    { field: "ProgressStatusId", title: "Trạng thái tiến độ", editor: progressStatusEditor, template: "#= getProgressStatus(ProgressStatusId) #", groupHeaderTemplate: "Trạng thái tiến độ: #= getProgressStatus(value) #", width: 200 }
                ],
                editable: true,
                dataBound: function () {
                    var dataView = this.dataSource.view();
                    for (var i = 0; i < dataView.length; i++) {
                        if (kendo.parseDate(dataView[i].Deadline, "dd/MM/yyyy") <= new Date()) {
                            $("#BeAssignedUnfinishedGrid tbody").find("tr[data-uid=" + dataView[i].uid + "]").addClass("btn-danger active");
                        } else if (kendo.parseDate(dataView[i].Deadline, "dd/MM/yyyy") <= new Date().addDays(1)) {
                            $("#BeAssignedUnfinishedGrid tbody").find("tr[data-uid=" + dataView[i].uid + "]").addClass("btn-warning active");
                        } else {

                        }
                    }
                }
            });
            
            //----------Tab 2-----------//
            var beAssignedFinishedDataSource = new kendo.data.DataSource({
                autoSync: true,
                transport: {
                    read: {
                        url: "/Home/GetMaterials",
                        type: "post"
                    },
                    update: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    destroy: {
                        url: "/Home/DeleteMaterial",
                        type: "post",
                    },
                    create: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return {
                                materials: kendo.stringify(options.models)
                            };
                        } else {
                            return {
                                pageNumber: options.page,
                                pageSize: options.pageSize,
                                command: "BeAssignedFinished"
                            };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                serverPaging: true,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: false, defaultValue: 0 },
                            MaterialProposalCode: { editable: false, type: "string", validation: { required: true } },
                            MaterialName: { editable: false, type: "string", validation: { required: true } },
                            Description: { type: "string" },
                            Quantity: { type: "number" },
                            InventoryQuantity: { type: "number" },
                            Unit: { type: "string", validation: { required: true } },
                            Used: { type: "boolean" },
                            UsingPurpose: { type: "string" },
                            Deadline: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            StartDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ApproveDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            FinishDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            DeliveryDate: { editable: false, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ProgressStatusId: { type: "number" },
                            Note: { type: "string" },
                            ImplementerDepartmentId: { type: "number" },
                            ImplementerUserName: { type: "string" },
                            ApproveStatus: { type: "number", editable: false },
                            Finished: { type: "boolean", editable: false }
                        }
                    },
                    total: "total",
                    data: "data"
                }
            });

            $("#BeAssignedFinishedGrid").kendoGrid({
                dataSource: beAssignedFinishedDataSource,
                navigatable: true,
                pageable: true,
                groupable: {
                    messages: {
                        empty: "Kéo thả tên cột vào đây để xem theo nhóm."
                    }
                },
                //toolbar: [{ name: "create", text: "Thêm" }],
                columns: [
                    { field: "MaterialProposalCode", title: "Mã đề xuất", template: "<a href='/chinh-sua-de-xuat/#= MaterialProposalId #' class='label label-primary'>#= MaterialProposalCode #</a>", width: 100 },
                    { field: "MaterialName", template: "<a href='/Home/Material/#= Id #' class='label label-success pull-right'>Xem</a> #= MaterialName #", title: "Tên vật tư", width: 200 },
                    { field: "ApproveDate", format: '{0:dd/MM/yyyy}', title: "Ngày duyệt", width: 150 },
                    { field: "StartDate", format: '{0:dd/MM/yyyy}', title: "Ngày giao", width: 150 },
                    { field: "Deadline", format: '{0:dd/MM/yyyy}', title: "Hạn chót", width: 150 },
                    { field: "ProgressStatusId", title: "Trạng thái tiến độ", editor: progressStatusEditor, template: "#= getProgressStatus(ProgressStatusId) #", groupHeaderTemplate: "Trạng thái tiến độ: #= getProgressStatus(value) #", width: 200 }
                ],
                editable: true
            });
        });
        Date.prototype.addDays = function (days) {
            this.setDate(this.getDate() + days);
            return this;
        };
        var textareaEditor = function (container, options) {
            $('<textarea class="k-input k-textbox" data-bind="value:' + options.field + '" />')
                .appendTo(container);
        };

        function getImplementerDepartmentName(id) {
            var departmentName = "";
            $.each(implementerDepartmentDataSource._data, function () {
                if (this.Id == id) {
                    departmentName = this.DepartmentName;
                }
            });
            return departmentName;
        }

        var implementerDepartmentDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetDepartment",
                    type: "post"
                }
            }
        });

        function implementerDepartmentEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DepartmentName",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: implementerDepartmentDataSource
                });
        }

        function getImplementerDisplayName(userName) {
            var displayName = "";
            $.each(implementerUserDataSource._data, function () {
                if (this.UserName == userName) {
                    displayName = this.DisplayName;
                }
            });
            return displayName;
        }

        var implementerUserDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetUser",
                    type: "post"
                }
            }
        });

        function implementerUserEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DisplayName",
                    dataValueField: "UserName",
                    optionLabel: "-Chọn-",
                    dataSource: implementerUserDataSource
                });
        }

        function getProgressStatus(id) {
            var status = "";
            $.each(progressStatusDataSource._data, function () {
                if (this.Id == id) {
                    status = this.Status;
                }
            });
            return status;
        }

        var progressStatusDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetProgressStatus",
                    type: "post"
                }
            }
        });

        function progressStatusEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "Status",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: progressStatusDataSource
                });
        }

        var materialProposalCodeDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetMaterialProposals",
                    type: "post"
                }
            }
        });

        function getMaterialProposalLink(code) {
            var proposalCode = "";
            $.each(materialProposalCodeDataSource._data, function () {
                if (this.MaterialProposalCode == code) {
                    proposalCode = "Mã đề xuất: <a href='/chinh-sua-de-xuat/" + this.MaterialProposalId + "' class='label label-primary'>" + this.MaterialProposalCode + "</a>";
                }
            });
            return proposalCode;
        }
    </script>

}
