@using System.Collections
@using System.Threading
@using KymdanMM.Model.Models
@using KymdanMM.Models
@model KymdanMM.Models.MaterialProposalViewModel
@{
    ViewBag.Title = "AddOrUpdateMaterialProposal";
    var departments = (IEnumerable<Department>)ViewBag.Departments;
    var users = (IEnumerable<UserProfile>)ViewBag.Users;
    var progressStatuses = (IEnumerable<ProgressStatus>)ViewBag.ProgressStatuses;
    var disabledAttribute = Model.Id != 0 ? (object)new {@class = "form-control", disabled = "disabled"} : (object)new {@class = "form-control"};
}

<div class="row">&nbsp;</div>
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            Thêm đề xuất
        </div>
        <div class="panel-body">
            @switch (Model.ApproveStatus)
            {
                case ApproveStatus.AdminApproved:
                    <div class="alert alert-success">Admin Đã duyệt</div>
                    break;
                case ApproveStatus.ManagerApproved:
                    <div class="alert alert-info">Quản lý đã duyệt</div>
                    break;
                default:
                    <div class="alert alert-warning">Chưa duyệt</div>
                    break;
            }
            @using (Html.BeginForm("AddOrUpdateMaterialProposal", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "MaterialProposalForm" }))
            {
                @Html.AntiForgeryToken()
                //@Html.ValidationSummary()
                @Html.HiddenFor(m => m.Id)
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ProposerUserName, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.DropDownListFor(m => m.ProposerUserName, new SelectList(users, "UserName", "DisplayName"), "Chọn người đề xuất", new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ProposerDepartmentId, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.DropDownListFor(m => m.ProposerDepartmentId, new SelectList(departments, "Id", "DepartmentName"), "Chọn phòng ban", new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                    @if (Thread.CurrentPrincipal.IsInRole("Admin"))
                    {
                        <div class="form-group">
                            @Html.LabelFor(m => m.ImplementerUserName, new { @class = "col-md-4 control-label" })
                            <div class="col-sm-8 col-md-6">
                                @Html.DropDownListFor(m => m.ImplementerUserName, new SelectList(users, "UserName", "DisplayName"), "Chọn người thực hiện", disabledAttribute)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ImplementerDepartmentId, new { @class = "col-md-4 control-label" })
                            <div class="col-sm-8 col-md-6">
                                @Html.DropDownListFor(m => m.ImplementerDepartmentId, new SelectList(departments, "Id", "DepartmentName"), "Chọn phòng ban", disabledAttribute)
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.TextAreaFor(m => m.Description, disabledAttribute)
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    @if (Thread.CurrentPrincipal.IsInRole("Admin"))
                    {
                        <div class="form-group">
                            @Html.LabelFor(m => m.ManagementCode, new {@class = "col-md-4 control-label"})
                            <div class="col-sm-8 col-md-6">
                                @Html.TextBoxFor(m => m.ManagementCode, disabledAttribute)
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(m => m.ProposalCode, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.TextBoxFor(m => m.ProposalCode, disabledAttribute)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ProgressStatusId, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.DropDownListFor(m => m.ProgressStatusId, new SelectList(progressStatuses, "Id", "Status"), "Chọn trạng thái", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Note, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.TextAreaFor(m => m.Note, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">Danh sách vật tư</div>
                        <div class="panel-body">
                            <div id="MaterialGrid"></div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<nav class="navbar navbar-default navbar-fixed-bottom" role="navigation">
    <div class="container">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                <input type="text" class="form-control" placeholder="Viết bình luận...">
            </div>
            <button type="submit" class="btn btn-default">Bình luận</button>
        </form>
        <div class="pull-right">
            <a href="/" class="btn btn-default navbar-btn" role="button">Hủy</a>
            <input type="button" id="approveMaterialProposal" class="btn btn-success navbar-btn" value="Duyệt" />
            <input type="button" id="submitMaterialProposal" class="btn btn-primary navbar-btn" value="Lưu" />
        </div>
    </div>
</nav>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            var editable = '@(Model.Id == 0)' == 'True';
            var materialProposalDataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/Home/GetMaterial",
                        type: "post"
                    },
                    update: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    destroy: {
                        url: "/Home/DeleteMaterial",
                        type: "post",
                    },
                    create: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return {
                                materials: kendo.stringify(options.models),
                                materialProposalId: $("#Id").val()
                            };
                        } else {
                            return {
                                id: $("#Id").val(),
                                pageNumber: options.page,
                                pageSize: options.pageSize
                            };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                serverPaging: true,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: false, defaultValue: 0 },
                            MaterialName: { editable: editable, type: "string", validation: { required: true } },
                            Description: { editable: editable, type: "string" },
                            Quantity: { editable: editable, type: "number" },
                            Unit: { editable: editable, type: "string", validation: { required: true } },
                            Used: { editable: editable, type: "boolean" },
                            UsingPurpose: { editable: editable, type: "string" },
                            Deadline: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            Note: { type: "string" }
                        }
                    },
                    total: "total",
                    data: "data"
                }
                , sync: function () {
                    window.location.replace('@Url.Action("AddOrUpdateMaterialProposal", "Home")' + '?id=' + $("#Id").val());
                }
            });

            $("#MaterialGrid").kendoGrid({
                dataSource: materialProposalDataSource,
                navigatable: true,
                pageable: true,
                height: 400,
                toolbar: [{ name: "create", text: "Thêm" }],
                columns: [
                    { field: "MaterialName", title: "Tên vật tư" },
                    { field: "Description", title: "Mô tả", editor: textareaEditor, hidden: true },
                    { field: "Quantity", title: "Số lượng", width: 80 },
                    { field: "Unit", title: "Đơn vị tính", hidden: true },
                    { field: "Used", title: "Đã sử dụng?", hidden: true },
                    { field: "UsingPurpose", title: "Mục đích sử dụng", editor: textareaEditor, hidden: true },
                    { field: "Deadline", format: '{0:dd/MM/yyyy}', title: "Hạn chót" },
                    { field: "Note", title: "Ghi chú", editor: textareaEditor, width: 400 },
                    { command: [{ name: "destroy", title: "&nbsp;", width: 50, text: "Xóa" }] }
                ],
                dataBound: function() {
                    if ($("#Id").val() != 0) {
                        $("#MaterialGrid").find("table th:last").hide();
                        $("#MaterialGrid").find("table td:last").hide();
                        $("#MaterialGrid").find("div.k-toolbar").hide();
                    }
                },
                editable: true
            });

            //$("#DepartmentId").kendoDropDownList({
            //    dataTextField: "DepartmentName",
            //    dataValueField: "Id",
            //    autoBind: true,
            //    optionLabel: "Chọn đơn vị",
            //    dataSource: {
            //        severFiltering: true,
            //        transport: {
            //            read: {
            //                url: "/Home/GetDepartment",
            //                type: "post"
            //            }
            //        }
            //    }
            //});

            //$("#ProposerUserName").kendoDropDownList({
            //    dataTextField: "DisplayName",
            //    dataValueField: "UserName",
            //    autoBind: true,
            //    optionLabel: "Chọn người đề xuất",
            //    dataSource: {
            //        severFiltering: true,
            //        transport: {
            //            read: {
            //                url: "/Home/GetUser",
            //                type: "post"
            //            }
            //        }
            //    }
            //});

            //$("#ImplementerUserName").kendoDropDownList({
            //    dataTextField: "DisplayName",
            //    dataValueField: "UserName",
            //    autoBind: true,
            //    optionLabel: "Chọn người thực hiện",
            //    dataSource: {
            //        severFiltering: true,
            //        transport: {
            //            read: {
            //                url: "/Home/GetUser",
            //                type: "post"
            //            }
            //        }
            //    }
            //});
            
            $("#submitMaterialProposal").on("click", function () {
                if (!$("#MaterialProposalForm").valid()) {
                    return;
                }

                $.ajax({
                    url: '@Url.Action("AddOrUpdateMaterialProposal", "Home")',
                    type: "POST",
                    data: $("form").serialize(),
                    dataType: "json",
                    success: function(id) {
                        $("#Id").val(id);
                        var data = $("#MaterialGrid").data("kendoGrid").dataSource.data()[0];
                        if (data) {
                            data.dirty = true;
                            $("#MaterialGrid").data("kendoGrid").saveChanges();
                        } else {
                            $("#MaterialGrid").addClass("input-validation-error");
                        }
                    }
                });
            });
        });

        var textareaEditor = function (container, options) {
            $('<textarea class="k-input k-textbox" data-bind="value:' + options.field + '" />')
            .appendTo(container);
        };
    </script>

}