@using System.Collections
@using System.Threading
@using KymdanMM.Model.Models
@using KymdanMM.Models
@model KymdanMM.Models.MaterialProposalViewModel
@{
    ViewBag.Title = "AddOrUpdateMaterialProposal";
    var currentUser = (UserProfile)ViewBag.CurrentUser;
    var enableAttribute = (object)new { @class = "form-control" };
    var isNew = Model.Id == 0;
    var editable = !Model.Sent;
    var open = isNew ? "in" : "";

}

<span id="popupNotification"></span>
<div class="row">&nbsp;</div>
<div class="row">
    @using (Html.BeginForm("AddOrUpdateMaterialProposal", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "MaterialProposalForm" }))
    {
        @Html.AntiForgeryToken()
        //@Html.ValidationSummary()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.FromHardProposal)
        @Html.HiddenFor(m => m.File)
        @Html.HiddenFor(m => m.Sent)
        <div class="panel panel-default">
            <div class="panel-heading">
                <p class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                        Thông tin cơ bản
                    </a>
                </p>
            </div>
            <div id="collapseOne" class="panel-collapse collapse @open">
                <div class="panel-body">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ProposalCode, new { @class = "col-md-4 control-label" })
                            <div class="col-sm-8 col-md-6">
                                @if (editable)
                                {
                                    @Html.TextBoxFor(m => m.ProposalCode, enableAttribute)
                                }
                                else
                                {
                                    <span class="control-label pull-left">@Html.DisplayFor(m => m.ProposalCode)</span>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ManagementCode, new { @class = "col-md-4 control-label" })
                            <div class="col-sm-8 col-md-6">
                                @if (editable)
                                {
                                    @Html.TextBoxFor(m => m.ManagementCode, enableAttribute)
                                }
                                else
                                {
                                    <span class="control-label pull-left">@Html.DisplayFor(m => m.ManagementCode)</span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                            <div class="col-sm-8 col-md-6">
                                @if (editable)
                                {
                                    @Html.TextAreaFor(m => m.Description, enableAttribute)
                                }
                                else
                                {
                                    <span class="control-label pull-left">@Html.DisplayFor(m => m.Description)</span>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Note, new { @class = "col-md-4 control-label" })
                            <div class="col-sm-8 col-md-6">
                                @Html.TextAreaFor(m => m.Note, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <p class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                        Danh sách vật tư
                    </a>
                </p>
            </div>
            <div id="collapseTwo" class="panel-collapse collapse in">
                <div id="MaterialGrid"></div>
                <div id="UploadImageWindow"></div>
                <div id="CommentWindow"></div>
            </div>
        </div>
    }
</div>
<nav class="navbar navbar-default navbar-fixed-bottom" role="navigation">
    <div class="container">
        <div class="col-sm-8">
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                <a href="/" class="btn btn-default navbar-btn" role="button">Trở lại</a>
                @if (!Model.Sent)
                {
                    <input type="button" id="saveDraftMaterialProposal" class="btn btn-primary navbar-btn" value="Lưu tạm" />
                    <input type="button" id="submitMaterialProposal" class="btn btn-primary navbar-btn" value="Gửi" />
                }
                else
                {
                    if (Thread.CurrentPrincipal.IsInRole("Admin"))
                    {
                        <input type="button" id="approveMaterial" class="btn btn-success navbar-btn" value="Duyệt" />
                    }
                    <input type="button" id="submitMaterialProposal" class="btn btn-primary navbar-btn" value="Cập nhật" />
                }
            </div>
        </div>
    </div>
</nav>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="success">
            <h3>#= message #</h3>
        </div>
    </script>
    <script id="approveStatusTemplate" type="text/x-kendo-tmpl">
        # if (Approved) { #
        <span class="label label-success">
            Đã duyệt
        </span>
        # } else {#
        <span class="label label-warning">
            Chưa duyệt
        </span>
        # } #
    </script>
    <script id="finishStatusTemplate" type="text/x-kendo-tmpl">
        # if (Finished) { #
        <span class="label label-success">
            Đã hoàn thành
        </span>
        # } else {#
        <span class="label label-warning">
            Chưa hoàn thành
        </span>
        # } #
    </script>
    <script id="fileTemplate" type="text/x-kendo-template">
    <span class='k-progress'></span>
    <div class='file-wrapper'>
        <a href='/Images/Upload/#=name#' target='_blank'>
            <img class='file-icon' src='/Images/Upload/#=name#' />
            <h4 class='file-heading file-name-heading'>Name: #=name#</h4>
            <h4 class='file-heading file-size-heading'>Size: #=size# bytes</h4>
        </a>
        <button type='button' class='k-upload-action'></button>
</div>
</script>
    <script type="text/javascript">
        var wnd, commentWindow;
        $(document).ready(function () {
            implementerDepartmentDataSource.read();
            implementerUserDataSource.read();
            progressStatusDataSource.read();
            $("#Deadline").kendoDatePicker({
                format: "dd/MM/yyyy"
            });
            var popupNotification = $("#popupNotification").kendoNotification({
                position: {
                    top: 10,
                    right: 10
                },
                autoHideAfter: 5000,
                stacking: "down",
                templates: [{
                    type: "success",
                    template: $("#successTemplate").html()
                }]
            }).data("kendoNotification");
            var editable = '@editable' == 'True';
            var hidden = '@Thread.CurrentPrincipal.IsInRole("Admin")' != 'True' && '@Model.FromHardProposal' != 'True';
            var materialProposalDataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/Home/GetMaterials",
                        type: "post"
                    },
                    update: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    destroy: {
                        url: "/Home/DeleteMaterial",
                        type: "post",
                    },
                    create: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return {
                                materials: kendo.stringify(options.models),
                                materialProposalId: $("#Id").val()
                            };
                        } else {
                            return {
                                id: $("#Id").val(),
                                pageNumber: options.page,
                                pageSize: options.pageSize,
                                approved: '@ViewBag.Approved'
                            };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                serverPaging: true,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: false, defaultValue: 0 },
                            MaterialName: { editable: editable, type: "string", validation: { required: true } },
                            Description: { editable: editable, type: "string" },
                            Quantity: { editable: editable, type: "number" },
                            InventoryQuantity: { editable: editable, type: "number" },
                            Unit: { editable: editable, type: "string", validation: { required: true } },
                            Used: { editable: editable, type: "boolean" },
                            UsingPurpose: { editable: editable, type: "string" },
                            Deadline: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            StartDate: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ApproveDate: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ProgressStatusId: { editable: editable, type: "number" },
                            Note: { editable: editable, type: "string" },
                            ImplementerDepartmentId: { type: "number" },
                            ImplementerUserName: { type: "string" },
                            File: { type: "string" },
                            Approved: { type: "boolean", editable: false, defaultValue: '@Model.FromHardProposal' == 'True' },
                            Finished: { type: "boolean", editable: false }
                        }
                    },
                    total: "total",
                    data: "data"
                },
                sync: function () {
                    $("#MaterialGrid").removeClass("input-validation-error");
                    popupNotification.show({ message: "Lưu danh sách vật tư thành công!" }, "success");
                }
            });

            $("#MaterialGrid").kendoGrid({
                dataSource: materialProposalDataSource,
                navigatable: true,
                pageable: true,
                sortable: true,
                resizable: true,
                columnMenu: true,
                selectable: "multiple",
                height: 400,
                //toolbar: [{ name: "create", text: "Thêm" }],
                columns: [
                    { field: "MaterialName", title: "Tên vật tư", width: 150 },
                    { field: "Description", title: "Mô tả", editor: textareaEditor, width: 200 },
                    { field: "Quantity", title: "SL", width: 80 },
                    { field: "InventoryQuantity", title: "SL tồn kho", width: 80 },
                    { field: "Unit", title: "Đơn vị tính", width: 80 },
                    { field: "Used", title: "Đã sử dụng?", width: 90 },
                    { field: "UsingPurpose", title: "Mục đích sử dụng", editor: textareaEditor, width: 170 },
                    { field: "Deadline", format: '{0:dd/MM/yyyy}', title: "Ngày nhận vật tư", width: 150 },
                    { field: "File", title: "File", width: 70, hidden: true},
                    { field: "Approved", title: "Duyệt", template: $("#approveStatusTemplate").html(), width: 100 },
                    { field: "ApproveDate", format: '{0:dd/MM/yyyy}', title: "Ngày duyệt", width: 150, hidden: '@Model.FromHardProposal' != 'True' },
                    { field: "ImplementerDepartmentId", title: "Đơn vị thực hiện", editor: implementerDepartmentEditor, template: "#= getImplementerDepartmentName(ImplementerDepartmentId) #", groupHeaderTemplate: "Đơn vị thực hiện: #= getImplementerDepartmentName(value) #", width: 150, hidden: hidden },
                    { command: [{ text: "Hình ảnh", click: uploadImage }, { text: "Phản hồi", click: showComment }], title: " ", width: "220px" }
                ],
                dataBound: function () {
                    if (editable) {
                        $("#MaterialGrid .k-grid-content").on("dblclick", function () {
                            $('#MaterialGrid').data('kendoGrid').addRow();
                        });

                        $("#MaterialGrid .k-grid-content table").on("dblclick", function () {
                            return false;
                        });
                    }
                },
                edit: function (e) {
                },
                editable: true
            });

            wnd = $("#UploadImageWindow")
                .kendoWindow({
                    title: "Hình ảnh",
                    modal: true,
                    visible: false,
                    resizable: false,
                    width: 600
                }).data("kendoWindow");

            $("#submitMaterialProposal").on("click", function () {
                if (!$("#MaterialProposalForm").valid()) {
                    return;
                }
                submitMaterialProposal(true);
            });

            $("#saveDraftMaterialProposal").on("click", function () {
                if (!$("#MaterialProposalForm").valid()) {
                    return;
                }
                submitMaterialProposal(false);
            });

            function submitMaterialProposal(isSend) {
                if (isSend) {
                    $("#Sent").val(isSend);
                }
                $.ajax({
                    url: '@Url.Action("AddOrUpdateMaterialProposal", "Home")',
                    type: "POST",
                    data: $("form").serialize(),
                    dataType: "json",
                    async: false,
                    success: function (id) {
                        popupNotification.show({ message: "Lưu đề xuất thành công!" }, "success");
                        $("#Id").val(id);
                        var data = $("#MaterialGrid").data("kendoGrid").dataSource.data()[0];
                        if (data) {
                            data.dirty = true;
                            $("#MaterialGrid").data("kendoGrid").saveChanges();
                        } else {
                            $("#MaterialGrid").addClass("input-validation-error");
                        }
                    }
                });
            }

            $("#approveMaterial").on("click", function () {
                if ($("#MaterialProposalForm").valid()) {
                    submitMaterialProposal(true);
                    approveMaterial();
                }
            });

            function approveMaterial() {
                var ids = [];
                var grid = $("#MaterialGrid").data("kendoGrid");
                grid.select().each(function () {
                    var dataItem = grid.dataItem($(this));
                    ids.push(dataItem.Id);
                });
                if (ids.length > 0) {
                    $.ajax({
                        url: '@Url.Action("ApproveMaterial", "Home")',
                        type: "POST",
                        data: { idString: ids.join(',') },
                        dataType: "json",
                        async: false,
                        success: function (result) {
                            if (result) {
                                $("#MaterialGrid").data("kendoGrid").dataSource.read();
                            }
                        }
                    });
                }
            }

            $("#finishMaterialProposal").on("click", function () {
                if ($("#MaterialProposalForm").valid()) {
                    submitMaterialProposal(true);
                    finishMaterialProposal();
                }
            });

            function finishMaterialProposal() {
                var ids = [];
                var grid = $("#MaterialGrid").data("kendoGrid");
                grid.select().each(function () {
                    var dataItem = grid.dataItem($(this));
                    ids.push(dataItem.Id);
                });
                $.ajax({
                    url: '@Url.Action("FinishMaterial", "Home")',
                    type: "POST",
                    data: { idString: ids.join(',') },
                    dataType: "json",
                    async: false,
                    success: function (result) {
                        if (result) {
                            $("#MaterialGrid").data("kendoGrid").dataSource.read();
                        }
                    }
                });
            }

            $("#submitComment").on("click", function () {
                $.ajax({
                    url: '@Url.Action("AddComment", "Home")',
                    type: "POST",
                    data: { id: $("#Id").val(), content: $("#comment").val() },
                    dataType: "json",
                    success: function (result) {
                        if (result) {
                            location.reload();
                        }
                    }
                });
            });

            $("#comment").on("keypress", function (e) {
                if (e.keyCode == 13) {
                    $("#submitComment").trigger("click");
                }
            });
        });

        var textareaEditor = function (container, options) {
            $('<textarea class="k-input k-textbox" data-bind="value:' + options.field + '" />')
                .appendTo(container);
        };
        
        function uploadImage(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            dataItem.File = dataItem.File ? dataItem.File : "[]";
            wnd.content("<input type=\"file\" id=\"file_" + dataItem.uid + "\" name=\"files\" />");
            $("#file_" + dataItem.uid).kendoUpload({
                multiple: true,
                async: {
                    saveUrl: '@Url.Action("SaveFile", "Home")',
                    removeUrl: '@Url.Action("RemoveFile", "Home")',
                    autoUpload: true
                },
                localization: {
                    select: "Chọn tập tin",
                },
                success: function (e) {
                    var files = JSON.parse(dataItem.File);
                    var results = JSON.parse(e.XMLHttpRequest.responseText);
                    if (e.operation == "remove") {
                        files = $.grep(files, function (file) {
                            return file.name != results[0];
                        });
                    } else {
                        files = $.merge(files, results);
                    }
                    dataItem.set("File", JSON.stringify(files));
                    var imgs = $("#UploadImageWindow").find("img");
                    $.each(imgs, function() {
                        $(this).attr("src", this.src + "?" + new Date().getTime());
                    });
                },
                files: JSON.parse(dataItem.File),
                template: kendo.template($('#fileTemplate').html())
            });
            wnd.center().open();
        }
        
        function showComment(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            commentWindow = $("#CommentWindow")
                .kendoWindow({
                    title: "Phản hồi",
                    modal: true,
                    visible: false,
                    resizable: false,
                    content: '@Url.Action("CommentPartialView")' + '?id=' + dataItem.Id,
                    width: 960
                }).data("kendoWindow");
            commentWindow.center().open();
        }

        function getImplementerDepartmentName(id) {
            var departmentName = "";
            $.each(implementerDepartmentDataSource._data, function () {
                if (this.Id == id) {
                    departmentName = this.DepartmentName;
                }
            });
            return departmentName;
        }

        var implementerDepartmentDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetDepartment",
                    type: "post"
                }
            }
        });

        function implementerDepartmentEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DepartmentName",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: implementerDepartmentDataSource
                });
        }

        function getImplementerDisplayName(userName) {
            var displayName = "";
            $.each(implementerUserDataSource._data, function () {
                if (this.UserName == userName) {
                    displayName = this.DisplayName;
                }
            });
            return displayName;
        }

        var implementerUserDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetUser",
                    type: "post"
                }
            }
        });

        function implementerUserEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DisplayName",
                    dataValueField: "UserName",
                    optionLabel: "-Chọn-",
                    dataSource: implementerUserDataSource
                });
        }

        function getProgressStatus(id) {
            var status = "";
            $.each(progressStatusDataSource._data, function () {
                if (this.Id == id) {
                    status = this.Status;
                }
            });
            return status;
        }

        var progressStatusDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetProgressStatus",
                    type: "post"
                }
            }
        });

        function progressStatusEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "Status",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: progressStatusDataSource
                });
        }
    </script>
}