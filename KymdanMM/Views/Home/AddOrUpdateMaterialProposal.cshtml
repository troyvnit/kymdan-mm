@using System.Collections
@using KymdanMM.Model.Models
@using KymdanMM.Models
@model KymdanMM.Models.MaterialProposalViewModel
@{
    ViewBag.Title = "AddOrUpdateMaterialProposal";
    var departments = (IEnumerable<Department>) ViewBag.Departments;
    var users = (IEnumerable<UserProfile>)ViewBag.Users;
    var progressStatuses = (IEnumerable<ProgressStatus>)ViewBag.ProgressStatuses;
}

<div class="row">&nbsp;</div>
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <span>
                Thêm đề xuất
            </span>
                @if (Model.Approved)
                {
                    <span class="label label-success">Đã duyệt</span>
                }
                else
                {
                    <span class="label label-warning">Chưa duyệt</span>
                }
            <div class="pull-right">
                <a href="/" class="btn btn-default" role="button">Hủy</a>
                <input type="button" id="approveMaterialProposal" class="btn btn-success" value="Duyệt" />
                <input type="button" id="submitMaterialProposal" class="btn btn-primary" value="Lưu" />
            </div>
            <div class="clearfix"></div>
</div>
        <div class="panel-body">
            
            @using (Html.BeginForm("AddOrUpdateMaterialProposal", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary()
                @Html.HiddenFor(m => m.Id)
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ProposerUserName, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.DropDownListFor(m => m.ProposerUserName, new SelectList(users, "UserName", "DisplayName"), "Chọn người thực hiện", new { @class = "form-control" , disabled = "disabled" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ImplementerUserName, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.DropDownListFor(m => m.ImplementerUserName, new SelectList(users, "UserName", "DisplayName"), "Chọn người thực hiện", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.DepartmentId, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.DropDownListFor(m => m.DepartmentId, new SelectList(departments, "Id", "DepartmentName"), "Chọn phòng ban", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ManagementCode, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.TextBoxFor(m => m.ManagementCode, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ProposalCode, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.TextBoxFor(m => m.ProposalCode, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ProgressStatusId, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.DropDownListFor(m => m.ProgressStatusId, new SelectList(progressStatuses, "Id", "Status"), "Chọn trạng thái", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Note, new { @class = "col-md-4 control-label" })
                        <div class="col-sm-8 col-md-6">
                            @Html.TextAreaFor(m => m.Note, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading">Danh sách vật tư</div>
            <div class="panel-body">
                <div id="MaterialGrid"></div>
            </div>
        </div>
            </div>
            }
            <div class="row">&nbsp;</div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            var materialProposalDataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/Home/GetMaterial",
                        type: "post"
                    },
                    update: {
                        url: "/Home/AddOrUpdateMaterialProposal",
                        type: "post"
                    },
                    destroy: {
                        url: "/Home/DeleteMaterial",
                        type: "post",
                    },
                    create: {
                        url: "/Home/AddOrUpdateMaterialProposal",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return {
                                materials: kendo.stringify(options.models),
                                materialProposalJson: JSON.stringify($("form").serializeObject())
                            };
                        } else {
                            return {
                                id: $("#Id").val(),
                                pageNumber: options.page,
                                pageSize: options.pageSize
                            };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                serverPaging: true,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: false, defaultValue: 0 },
                            MaterialName: { type: "string", validation: { required: true } },
                            Description: { type: "string" },
                            Quantity: { type: "number" },
                            Unit: { type: "string", validation: { required: true } },
                            Used: { type: "boolean" },
                            UsingPurpose: { type: "string" },
                            Deadline: { type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            Note: { type: "string" }
                        }
                    },
                    total: "total",
                    data: "data"
                }
            });

            $("#MaterialGrid").kendoGrid({
                dataSource: materialProposalDataSource,
                navigatable: true,
                pageable: true,
                height: 400,
                toolbar: [{ name: "create", text: "Thêm" }],
                columns: [
                    { field: "MaterialName", title: "Tên vật tư" },
                    { field: "Description", title: "Mô tả", editor: textareaEditor, hidden: true },
                    { field: "Quantity", title: "Số lượng", width: 80 },
                    { field: "Unit", title: "Đơn vị tính", hidden: true },
                    { field: "Used", title: "Đã sử dụng?", hidden: true },
                    { field: "UsingPurpose", title: "Mục đích sử dụng", editor: textareaEditor, hidden: true },
                    { field: "Deadline", format: '{0:dd/MM/yyyy}', title: "Hạn chót" },
                    { field: "Note", title: "Ghi chú", editor: textareaEditor, width: 400 },
                    { command: [{ name: "destroy", title: "&nbsp;", width: 50, text: "Xóa" }] }
                ],
                editable: true
            });

            //$("#DepartmentId").kendoDropDownList({
            //    dataTextField: "DepartmentName",
            //    dataValueField: "Id",
            //    autoBind: true,
            //    optionLabel: "Chọn đơn vị",
            //    dataSource: {
            //        severFiltering: true,
            //        transport: {
            //            read: {
            //                url: "/Home/GetDepartment",
            //                type: "post"
            //            }
            //        }
            //    }
            //});
            
            //$("#ProposerUserName").kendoDropDownList({
            //    dataTextField: "DisplayName",
            //    dataValueField: "UserName",
            //    autoBind: true,
            //    optionLabel: "Chọn người đề xuất",
            //    dataSource: {
            //        severFiltering: true,
            //        transport: {
            //            read: {
            //                url: "/Home/GetUser",
            //                type: "post"
            //            }
            //        }
            //    }
            //});

            //$("#ImplementerUserName").kendoDropDownList({
            //    dataTextField: "DisplayName",
            //    dataValueField: "UserName",
            //    autoBind: true,
            //    optionLabel: "Chọn người thực hiện",
            //    dataSource: {
            //        severFiltering: true,
            //        transport: {
            //            read: {
            //                url: "/Home/GetUser",
            //                type: "post"
            //            }
            //        }
            //    }
            //});

            $("#submitMaterialProposal").on("click", function () {
                var data = $("#MaterialGrid").data("kendoGrid").dataSource.data()[0];
                data.dirty = true;
                $("#MaterialGrid").data("kendoGrid").saveChanges();
            });
        });

        var textareaEditor = function (container, options) {
            $('<textarea class="k-input k-textbox" data-bind="value:' + options.field + '" />')
            .appendTo(container);
        };
    </script>

}