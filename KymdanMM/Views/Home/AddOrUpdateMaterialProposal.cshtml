@using System.Collections
@using System.Threading
@using KymdanMM.Model.Models
@using KymdanMM.Models
@model KymdanMM.Models.MaterialProposalViewModel
@{
    ViewBag.Title = "AddOrUpdateMaterialProposal";
    var departments = (IEnumerable<Department>)ViewBag.Departments;
    var users = (IEnumerable<UserProfile>)ViewBag.Users;
    var currentUser = (UserProfile)ViewBag.CurrentUser;
    var enableAttribute = (object)new { @class = "form-control" };
    var isNew = Model.Id == 0;
    var hidden = Thread.CurrentPrincipal.IsInRole("Member");
    var editable = !Thread.CurrentPrincipal.IsInRole("Member") || isNew;

}

<span id="popupNotification"></span>
<div class="row">&nbsp;</div>
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            Thông tin đề xuất
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("AddOrUpdateMaterialProposal", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "MaterialProposalForm" }))
            {
                @Html.AntiForgeryToken()
                //@Html.ValidationSummary()
                @Html.HiddenFor(m => m.Id)
                <div class="panel-group" id="accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <p class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                                    Thông tin cơ bản
                                </a>
                            </p>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse in">
                            <div class="panel-body">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ProposalCode, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8 col-md-6">
                                            @if (editable)
                                            {
                                                @Html.TextBoxFor(m => m.ProposalCode, enableAttribute)
                                            }
                                            else
                                            {
                                                <span class="control-label pull-left">@Html.DisplayFor(m => m.ProposalCode)</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ProposerUserName, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8 col-md-6">
                                            @if (editable)
                                            {
                                                @Html.DropDownListFor(m => m.ProposerUserName, new SelectList(users.Where(a => a.DepartmentId == Model.ProposerDepartmentId), "UserName", "DisplayName"), "Chọn người thực hiện", enableAttribute)
                                            }
                                            else
                                            {
                                                <span class="control-label pull-left">@Html.DisplayFor(m => m.ProposerDisplayName)</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ProposerDepartmentId, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8 col-md-6">
                                            @if (editable)
                                            {
                                                @Html.DropDownListFor(m => m.ProposerDepartmentId, new SelectList(departments, "Id", "DepartmentName"), "Chọn phòng ban", enableAttribute)
                                            }
                                            else
                                            {
                                                <span class="control-label pull-left">@Html.DisplayFor(m => m.ProposerDepartmentName)</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8 col-md-6">
                                            @if (editable)
                                            {
                                                @Html.TextAreaFor(m => m.Description, enableAttribute)
                                            }
                                            else
                                            {
                                                <span class="control-label pull-left">@Html.DisplayFor(m => m.Description)</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Note, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8 col-md-6">
                                            @Html.TextAreaFor(m => m.Note, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <p class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                                Danh sách vật tư
                            </a>
                        </p>
                    </div>
                    <div id="collapseTwo" class="panel-collapse collapse in">
                        <div id="MaterialGrid"></div>
                    </div>
                </div>
                if (Model.Id != 0)
                 {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <p class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseThree">
                                Phản hồi
                            </a>
                        </p>
                    </div>
                    <div id="collapseThree" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="col-sm-12">
                                <ul class="chat">
                                    @foreach (var comment in Model.Comments)
                                    {
                                        var str = comment.PosterDisplayName;
                                        string result = str;
                                        if (!string.IsNullOrEmpty(str))
                                        {
                                            var words = str.Split(' ');
                                            for (int index = 0; index < words.Length; index++)
                                            {
                                                var s = words[index];
                                                if (s.Length > 0)
                                                {
                                                    words[index] = s[0].ToString().ToUpper();
                                                }
                                            }
                                            result = string.Join("", words);
                                        }
                                        if (comment.PosterUserName == currentUser.UserName)
                                        {
                                            <li class="right clearfix">
                                                <span class="chat-img pull-right">
                                                    <img src="http://placehold.it/50/FA6F57/fff&amp;text=@result" alt="@comment.PosterDisplayName" class="img-circle">
                                                </span>
                                                <div class="chat-body clearfix">
                                                    <div class="header">
                                                        <small class=" text-muted"><span class="glyphicon glyphicon-time"></span>@comment.CreatedDate.ToString("dd/MM/yyyy HH:mm:ss")</small>
                                                        <strong class="pull-right primary-font">@comment.PosterDisplayName</strong>
                                                    </div>
                                                    <p>
                                                        @comment.Content
                                                    </p>
                                                </div>
                                            </li>
                                        }
                                        else if (Thread.CurrentPrincipal.IsInRole("Department Manager") || comment.Approved)
                                        {
                                            <li class="left clearfix">
                                                <span class="chat-img pull-left">
                                                    <img src="http://placehold.it/50/55C1E7/fff&amp;text=@result" alt="@comment.PosterDisplayName" class="img-circle">
                                                </span>
                                                <div class="chat-body clearfix">
                                                    <div class="header">
                                                        <strong class="primary-font">@comment.PosterDisplayName</strong>
                                                        <small class="pull-right text-muted">
                                                            <span class="glyphicon glyphicon-time"></span>@comment.CreatedDate.ToString("dd/MM/yyyy HH:mm:ss")
                                                        </small>
                                                    </div>
                                                    <p>
                                                        @comment.Content
                                                    </p>
                                                </div>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                 }
            }
        </div>
    </div>
</div>
<nav class="navbar navbar-default navbar-fixed-bottom" role="navigation">
    <div class="container">
        <div class="col-sm-8">
            <div class="navbar-form navbar-left">
                <div class="input-group">
                    <input id="comment" type="text" class="form-control" placeholder="Nhập phản hồi...">
                    <span class="input-group-btn">
                        <button class="btn btn-success" id="submitComment">
                            Gửi
                        </button>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                <a href="/" class="btn btn-default navbar-btn" role="button">Trở lại</a>
                <input type="button" id="submitMaterialProposal" class="btn btn-primary navbar-btn" value="Lưu" />
            </div>
        </div>
    </div>
</nav>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="success">
            <h3>#= message #</h3>
        </div>
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#Deadline").kendoDatePicker({
                format: "dd/MM/yyyy"
            });
            var popupNotification = $("#popupNotification").kendoNotification({
                position: {
                    top: 10,
                    right: 10
                },
                autoHideAfter: 5000,
                stacking: "down",
                templates: [{
                    type: "success",
                    template: $("#successTemplate").html()
                }]
            }).data("kendoNotification");
            var editable = '@editable' == 'True';
            var hidden = '@hidden' == 'True';
            var materialProposalDataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/Home/GetMaterial",
                        type: "post"
                    },
                    update: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    destroy: {
                        url: "/Home/DeleteMaterial",
                        type: "post",
                    },
                    create: {
                        url: "/Home/AddOrUpdateMaterial",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return {
                                materials: kendo.stringify(options.models),
                                materialProposalId: $("#Id").val()
                            };
                        } else {
                            return {
                                id: $("#Id").val(),
                                pageNumber: options.page,
                                pageSize: options.pageSize
                            };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                serverPaging: true,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: false, defaultValue: 0 },
                            MaterialName: { editable: editable, type: "string", validation: { required: true } },
                            Description: { editable: editable, type: "string" },
                            Quantity: { editable: editable, type: "number" },
                            Unit: { editable: editable, type: "string", validation: { required: true } },
                            Used: { editable: editable, type: "boolean" },
                            UsingPurpose: { editable: editable, type: "string" },
                            Deadline: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            StartDate: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ApproveDate: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                            ProgressStatusId: { type: "number" },
                            Note: { type: "string" },
                            ImplementerDepartmentId: { editable: editable, type: "number" },
                            ImplementerUserName: { editable: editable, type: "string" }
                        }
                    },
                    total: "total",
                    data: "data"
                },
                sync: function () {
                    $("#MaterialGrid").removeClass("input-validation-error");
                    popupNotification.show({ message: "Lưu danh sách vật tư thành công!" }, "success");
                }
            });

            $("#MaterialGrid").kendoGrid({
                dataSource: materialProposalDataSource,
                navigatable: true,
                pageable: true,
                groupable: {
                    messages: {
                        empty: "Kéo thả tên cột vào đây để xem theo nhóm."
                    }
                },
                height: 400,
                //toolbar: [{ name: "create", text: "Thêm" }],
                columns: [
                    { field: "MaterialName", title: "Tên vật tư" },
                    { field: "Description", title: "Mô tả", editor: textareaEditor },
                    { field: "Quantity", title: "SL" },
                    { field: "Unit", title: "Đơn vị tính" },
                    { field: "Used", title: "Đã sử dụng?", hidden: true },
                    { field: "UsingPurpose", title: "Mục đích sử dụng", editor: textareaEditor },
                    { field: "StartDate", format: '{0:dd/MM/yyyy}', title: "Ngày bắt đầu", hidden: hidden },
                    { field: "Deadline", format: '{0:dd/MM/yyyy}', title: "Hạn chót", hidden: hidden },
                    { field: "ApproveDate", format: '{0:dd/MM/yyyy}', title: "Ngày duyệt", hidden: hidden },
                    { field: "ImplementerDepartmentId", title: "Đơn vị thực hiện", editor: implementerDepartmentEditor, template: "#= getImplementerDepartmentName(ImplementerDepartmentId) #", groupHeaderTemplate: "Đơn vị thực hiện: #= getImplementerDepartmentName(value) #", hidden: hidden },
                    { field: "ImplementerUserName", title: "Người thực hiện", editor: implementerUserEditor, template: "#= getImplementerDisplayName(ImplementerUserName) #", groupHeaderTemplate: "Người thực hiện: #= getImplementerDisplayName(value) #", hidden: hidden },
                    { field: "ProgressStatusId", title: "Trạng thái tiến độ", editor: progressStatusEditor, template: "#= getProgressStatus(ProgressStatusId) #", groupHeaderTemplate: "Trạng thái tiến độ: #= getProgressStatus(value) #" },
                    { field: "Note", title: "Ghi chú", editor: textareaEditor },
                    { command: [{ name: "destroy", title: "&nbsp;", text: "Xóa" }] }
                ],
                dataBound: function () {
                    if ($("#Id").val() != 0) {
                        $("#MaterialGrid").data("kendoGrid").hideColumn(10);
                        $(".k-grid-add").remove();
                    } else {
                        $("#MaterialGrid .k-grid-content").on("dblclick", function () {
                            $('#MaterialGrid').data('kendoGrid').addRow();
                        });

                        $("#MaterialGrid .k-grid-content table").on("dblclick", function () {
                            return false;
                        });
                    }
                },
                edit: function(e) {
                    if (e.model.isNew()) {
                        e.model.set("Deadline", $("#Deadline").data("kendoDatePicker").value());
                    }
                },
                editable: true
            });

            $("#submitMaterialProposal").on("click", function () {
                if (!$("#MaterialProposalForm").valid()) {
                    return;
                }
                submitMaterialProposal();
            });
            
            function submitMaterialProposal() {
                $.ajax({
                    url: '@Url.Action("AddOrUpdateMaterialProposal", "Home")',
                    type: "POST",
                    data: $("form").serialize(),
                    dataType: "json",
                    async: false,
                    success: function (id) {
                        popupNotification.show({ message: "Lưu đề xuất thành công!" }, "success");
                        $("#Id").val(id);
                        var data = $("#MaterialGrid").data("kendoGrid").dataSource.data()[0];
                        if (data) {
                            data.dirty = true;
                            $("#MaterialGrid").data("kendoGrid").saveChanges();
                        } else {
                            $("#MaterialGrid").addClass("input-validation-error");
                        }
                    }
                });
            }

            $("#approveMaterialProposal").on("click", function () {
                if ($("#MaterialProposalForm").valid()) {
                    submitMaterialProposal();
                    approveMaterialProposal();
                }
            });
            
            function approveMaterialProposal() {
                $.ajax({
                    url: '@Url.Action("ApproveMaterialProposal", "Home")',
                    type: "POST",
                    data: { idString: $("#Id").val() },
                    dataType: "json",
                    async: false,
                    success: function (result) {
                        if (result) {
                            location.reload();
                        }
                    }
                });
            }

            $("#submitComment").on("click", function () {
                $.ajax({
                    url: '@Url.Action("AddComment", "Home")',
                    type: "POST",
                    data: { id: $("#Id").val(), content: $("#comment").val() },
                    dataType: "json",
                    success: function (result) {
                        if (result) {
                            location.reload();
                        }
                    }
                });
            });

            $("#comment").on("keypress", function (e) {
                if (e.keyCode == 13) {
                    $("#submitComment").trigger("click");
                }
            });

            implementerDepartmentDataSource.read();
            implementerUserDataSource.read();
            progressStatusDataSource.read();
        });

        var textareaEditor = function (container, options) {
            $('<textarea class="k-input k-textbox" data-bind="value:' + options.field + '" />')
                .appendTo(container);
        };

        function getImplementerDepartmentName(id) {
            var departmentName = "";
            $.each(implementerDepartmentDataSource._data, function() {
                if (this.Id == id) {
                    departmentName = this.DepartmentName;
                }
            });
            return departmentName;
        }

        var implementerDepartmentDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetDepartment",
                    type: "post"
                }
            }
        });
        
        function implementerDepartmentEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DepartmentName",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: implementerDepartmentDataSource
                });
        }
        
        function getImplementerDisplayName(userName) {
            var displayName = "";
            $.each(implementerUserDataSource._data, function () {
                if (this.UserName == userName) {
                    displayName = this.DisplayName;
                }
            });
            return displayName;
        }

        var implementerUserDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetUser",
                    type: "post"
                }
            }
        });
        
        function implementerUserEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DisplayName",
                    dataValueField: "UserName",
                    optionLabel: "-Chọn-",
                    dataSource: implementerUserDataSource
                });
        }
        
        function getProgressStatus(id) {
            var status = "";
            $.each(progressStatusDataSource._data, function () {
                if (this.Id == id) {
                    status = this.Status;
                }
            });
            return status;
        }

        var progressStatusDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetProgressStatus",
                    type: "post"
                }
            }
        });

        function progressStatusEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "Status",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: progressStatusDataSource
                });
        }
    </script>
}