@using System.Threading
@using KymdanMM.Models
@model KymdanMM.Models.MaterialViewModel
@{
    Layout = null;
    var users = (List<UserProfile>)ViewBag.Users;
    var currentUser = (UserProfile)ViewBag.CurrentUser;
    var proposalDepartmentComments =
        Model.Comments.Where(
            a =>
            {
                var user = users.FirstOrDefault(u => u.UserName == a.PosterUserName);
                return user != null && Model.ProposerDepartmentId ==
                            user.DepartmentId && (a.Approved || currentUser.DepartmentId == user.DepartmentId);
            });
    var implementDepartmentComments =
        Model.Comments.Where(
            a =>
            {
                var user = users.FirstOrDefault(u => u.UserName == a.PosterUserName);
                return user != null && Model.ImplementerDepartmentId ==
                            user.DepartmentId && (a.Approved || currentUser.DepartmentId == user.DepartmentId);
            });
    var generalManagerComments = Model.Comments.Where(a => Roles.IsUserInRole(a.PosterUserName, "Admin"));
    var relateMaterials = ViewBag.RelateMaterials;
}

<div class="form-horizontal" role="form" style="position: fixed; bottom: 0;">
    <div class="form-group">
        <label class="col-sm-2 control-label">Phản hồi</label>
        <div class="col-sm-8">
            <div class="input-group">
                <input id="comment" type="text" class="form-control" placeholder="Nhập phản hồi...">
                <span class="input-group-btn">
                    <button class="btn btn-success" id="submitComment">
                        Gửi
                    </button>
                </span>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label for="RelateIdsSelector" class="col-sm-2 control-label">Phản hồi cho</label>
        <div class="col-sm-8">
            @Html.DropDownList("RelateIdsSelector", new SelectList(relateMaterials, "Id", "MaterialName"), new { @class = "form-control", multiple = "multiple" })
        </div>
    </div>
</div>
<ul class="chat">
    @foreach (var comment in Model.Comments.OrderByDescending(a => a.CreatedDate))
    {
        var unread = comment.ReadUserNames.Contains(currentUser.UserName) ? "" : "unread";
        var str = comment.PosterDisplayName;
        string result = str;
        if (!string.IsNullOrEmpty(str))
        {
            var words = str.Split(' ');
            for (int index = 0; index < words.Length; index++)
            {
                var s = words[index];
                if (s.Length > 0)
                {
                    words[index] = s[0].ToString().ToUpper();
                }
            }
            result = string.Join("", words);
        }
        if (comment.PosterUserName == currentUser.UserName)
        {
            <li class="right clearfix">
                <span class="chat-img pull-right">
                    <img src="http://placehold.it/35/FA6F57/fff&amp;text=@result" alt="@comment.PosterDisplayName" class="img-circle">
                </span>
                <div class="chat-body clearfix">
                    <div class="header">
                        <small class=" text-muted"><span class="glyphicon glyphicon-time"></span>@comment.CreatedDate.ToString("dd/MM/yyyy HH:mm:ss")</small>
                        <strong class="pull-right primary-font">@comment.PosterDisplayName</strong>
                    </div>
                    <p>
                        @comment.Content
                    </p>
                </div>
            </li>
        }
        else
        {
            <li class="left clearfix">
                <span class="chat-img pull-left">
                    <img src="http://placehold.it/35/55C1E7/fff&amp;text=@result" alt="@comment.PosterDisplayName" class="img-circle">
                </span>
                <div class="chat-body clearfix">
                    <div class="header">
                        <strong class="primary-font">@comment.PosterDisplayName</strong>
                        <small class="pull-right text-muted">
                            <span class="glyphicon glyphicon-time"></span>@comment.CreatedDate.ToString("dd/MM/yyyy HH:mm:ss")
                        </small>
                    </div>
                    <p class="@unread">
                        @comment.Content
                    </p>
                </div>
            </li>
        }
    }
</ul>
<script type="text/javascript">
    $(document).ready(function () {
        $("#submitComment").on("click", function () {
            if ($("#comment").val() == "") {
                return false;
            }
            $.ajax({
                url: '@Url.Action("AddComment", "Home")',
                type: "POST",
                data: { ids: $("#RelateIdsSelector").val().join(','), content: $("#comment").val() },
                dataType: "json",
                success: function (result) {
                    if (result) {
                        window.commentWindow.refresh();
                    }
                }
            });
        });

        $("#comment").on("keypress", function (e) {
            if (e.keyCode == 13) {
                $("#submitComment").trigger("click");
            }
        });

        $("#RelateIdsSelector").multiselect({
            buttonWidth: '100%',
            includeSelectAllOption: true
        });
        $("#RelateIdsSelector").multiselect('select', '@Model.Id');
    });
</script>
