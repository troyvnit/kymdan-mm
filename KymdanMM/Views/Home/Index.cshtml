@using System.Threading
@using KymdanMM.Model.Models
@{
    ViewBag.Title = "Home Page";
}
<div class="row">&nbsp;</div>
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">Danh sách công việc</div>
        <div class="panel-body">
            @*<div class="pull-right">
                <a href="#" class="btn btn-danger" role="button">Xóa mục đã chọn</a>
                @if (Thread.CurrentPrincipal.IsInRole("Member"))
                {
                    <a href="@Url.Action("AddOrUpdateMaterialProposal")" class="btn btn-primary" role="button">Thêm đề xuất</a>
                }
                else
                {
                    <a href="#" class="btn btn-success" role="button">Duyệt mục đã chọn</a>
                }
            </div>
            <div class="clearfix"></div>
            <div class="row">&nbsp;</div>*@
            <div id="MaterialProposalGrid"></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script id="proposalCodeTemplate" type="text/x-kendo-tmpl">
        <a href="/chinh-sua-de-xuat/#= Id #" class="label label-primary">#= ProposalCode #</a>
    </script>
    <script id="approveStatusTemplate" type="text/x-kendo-tmpl">
        # if (ApproveStatus == 2) { #
        <span class="label label-success">
            Admin duyệt
        </span>
        # } else if (ApproveStatus == 1){#
        <span class="label label-info">            
            Manager duyệt
        </span>
        # } else {#
        <span class="label label-warning">            
            Chưa duyệt
        </span>
        # } #
    </script>
    <script type="text/x-kendo-template" id="materialProposalToolbarTemplate">
        <div class="toolbar">
            <div class="col-lg-8">
                <label>Xem theo:</label>
                @if (Thread.CurrentPrincipal.IsInRole("Admin"))
                {
                    <input id="DepartmentId" />
                }
                <input id="ProgressStatusId" />
                <div class="btn-group" data-toggle="buttons" id="ApproveStatus">
                    @if (!Thread.CurrentPrincipal.IsInRole("Admin"))
                    {
                        <label class="btn btn-warning">
                            <input type="radio" name="approveStatus" value="0"> Chưa duyệt
                        </label>
                    }
                    <label class="btn btn-info">
                        <input type="radio" name="approveStatus" value="1"> Manager duyệt
                    </label>
                    <label class="btn btn-success">
                        <input type="radio" name="approveStatus" value="2"> Admin duyệt
                    </label>
                    <label class="btn btn-primary">
                        <input type="radio" name="approveStatus" value=""> Tất cả
                    </label>
                </div>

            </div>
            <div class="input-group col-lg-3">
                <input type="text" class="form-control" id="keyWord" placeholder="Từ khóa" />
                <span class="input-group-btn">
                    <button class="btn btn-default" id="search" type="button">Tìm</button>
                </span>
            </div>
        </div>
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var materialProposalDataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/Home/GetMaterialProposal",
                        type: "post"
                    },
                    update: {
                        url: "/Home/AddOrUpdateMaterialProposal",
                        type: "post"
                    },
                    destroy: {
                        url: "/Home/DeleteMaterialProposal",
                        type: "post",
                    },
                    create: {
                        url: "/Home/AddOrUpdateMaterialProposal",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return {
                                models: kendo.stringify(options.models)
                            };
                        } else {
                            return {
                                keyWord: $("#keyWord").val(),
                                pageNumber: options.page,
                                pageSize: options.pageSize,
                                departmentId: $("#DepartmentId").val(),
                                progressStatusId: $("#ProgressStatusId").val(),
                                approveStatus: $("#ApproveStatus > label.active > input:radio[name='approveStatus']").val()
                            };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                serverPaging: true,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: false, defaultValue: "" },
                            Description: { type: "string" },
                            ManagementCode: { type: "string" },
                            ProposalCode: { type: "string" },
                            ProposerUserName: { type: "string" },
                            ProposerDepartmentId: { type: "number" },
                            ImplementerUserName: { type: "string" },
                            ImplementerDepartmentId: { type: "number" },
                            ProgressStatus: { type: "string" },
                            ApproveStatus: { type: "int" },
                            Finished: { type: "boolean" },
                            Deadline: { type: "string" },
                            Note: { type: "string" }
                        }
                    },
                    total: "total",
                    data: "data"
                }
            });

            $("#MaterialProposalGrid").kendoGrid({
                dataSource: materialProposalDataSource,
                navigatable: true,
                pageable: true,
                groupable: {
                    messages: {
                        empty: "Kéo thả tên cột vào đây để xem theo nhóm."
                    }
                },
                height: 500,
                toolbar: kendo.template($("#materialProposalToolbarTemplate").html()),
                columns: [
                    {
                        field: "ProposalCode", title: "Mã đề xuất",
                        template: $("#proposalCodeTemplate").html(), width: "10%"
                    },
                    { field: "Description", title: "Mô tả", width: "30%" },
                    { field: "Deadline", title: "Hạn chót", width: "15%" },

                    {
                        field: "Status",
                        title: "Trạng thái tiến độ", width: "20%"
                    },
                    {
                        field: "ApproveStatus", title: "Duyệt",
                        template: $("#approveStatusTemplate").html(), width: "15%"
                    },
                    { command: [{ name: "destroy", title: "&nbsp;", width: "10%", text: "Xóa" }] }
                ],
                detailInit: detailInit,
                dataBound: function () {
                    this.expandRow(this.tbody.find("tr.k-master-row").first());
                },
            });
            
            $("#search").on('click', function (e) {
                readGrid();
            });
            
            $("#ApproveStatus > label").on('click', function (e) {
                $("#ApproveStatus > label").removeClass("active");
                $(this).addClass("active");
                readGrid();
            }); 

            $("#DepartmentId").kendoDropDownList({
                dataTextField: "DepartmentName",
                dataValueField: "Id",
                autoBind: true,
                optionLabel: "Chọn đơn vị",
                dataSource: {
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/Home/GetDepartment",
                            type: "post"
                        }
                    }
                }
            });
            
            $("#DepartmentId").on('change', function () {
                readGrid();
            });
            
            $("#ProgressStatusId").kendoDropDownList({
                dataTextField: "Status",
                dataValueField: "Id",
                autoBind: true,
                optionLabel: "Chọn trạng thái",
                dataSource: {
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/Home/GetProgressStatus",
                            type: "post"
                        }
                    }
                }
            });

            $("#ProgressStatusId").on('change', function () {
                readGrid();
            });

            function readGrid() {
                var grid = $("#MaterialProposalGrid").data("kendoGrid");
                grid.dataSource.read();
                if (grid.dataSource.page() != 1) {
                    grid.dataSource.page(1);
                }
            }

            implementerDepartmentDataSource.read();
            implementerUserDataSource.read();
            progressStatusDataSource.read();
        });
        function detailInit(e) {
            var editable = true;
            var hidden = true;
            $("<div/>").appendTo(e.detailCell).kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "/Home/GetMaterial",
                            type: "post"
                        },
                        update: {
                            url: "/Home/AddOrUpdateMaterial",
                            type: "post"
                        },
                        destroy: {
                            url: "/Home/DeleteMaterial",
                            type: "post",
                        },
                        create: {
                            url: "/Home/AddOrUpdateMaterial",
                            type: "post"
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return {
                                    materials: kendo.stringify(options.models),
                                    materialProposalId: e.data.Id
                                };
                            } else {
                                return {
                                    id: e.data.Id,
                                    pageNumber: options.page,
                                    pageSize: options.pageSize
                                };
                            }
                        }
                    },
                    batch: true,
                    pageSize: 10,
                    serverPaging: true,
                    schema: {
                        model: {
                            id: "Id",
                            fields: {
                                Id: { editable: false, nullable: false, defaultValue: 0 },
                                MaterialName: { editable: editable, type: "string", validation: { required: true } },
                                Description: { editable: editable, type: "string" },
                                Quantity: { editable: editable, type: "number" },
                                Unit: { editable: editable, type: "string", validation: { required: true } },
                                Used: { editable: editable, type: "boolean" },
                                UsingPurpose: { editable: editable, type: "string" },
                                Deadline: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                                StartDate: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                                ApproveDate: { editable: editable, type: "date", format: "dd/MM/yyyy", validation: { required: true } },
                                ProgressStatusId: { type: "number" },
                                Note: { type: "string" },
                                ImplementerDepartmentId: { editable: editable, type: "number" },
                                ImplementerUserName: { editable: editable, type: "string" }
                            }
                        },
                        total: "total",
                        data: "data"
                    },
                    filter: { field: "MaterialProposalId", operator: "eq", value: e.data.Id }
                }, navigatable: true,
                pageable: true,
                height: 400,
                //toolbar: [{ name: "create", text: "Thêm" }],
                columns: [
                    { field: "MaterialName", title: "Tên vật tư" },
                    { field: "Description", title: "Mô tả", editor: textareaEditor },
                    { field: "Quantity", title: "SL" },
                    { field: "Unit", title: "Đơn vị tính" },
                    { field: "Used", title: "Đã sử dụng?", hidden: true },
                    { field: "UsingPurpose", title: "Mục đích sử dụng", editor: textareaEditor },
                    { field: "StartDate", format: '{0:dd/MM/yyyy}', title: "Ngày bắt đầu", hidden: hidden },
                    { field: "Deadline", format: '{0:dd/MM/yyyy}', title: "Hạn chót", hidden: hidden },
                    { field: "ApproveDate", format: '{0:dd/MM/yyyy}', title: "Ngày duyệt", hidden: hidden },
                    { field: "ImplementerDepartmentId", title: "Đơn vị thực hiện", editor: implementerDepartmentEditor, template: "#= getImplementerDepartmentName(ImplementerDepartmentId) #", groupHeaderTemplate: "Đơn vị thực hiện: #= getImplementerDepartmentName(value) #", hidden: hidden },
                    { field: "ImplementerUserName", title: "Người thực hiện", editor: implementerUserEditor, template: "#= getImplementerDisplayName(ImplementerUserName) #", groupHeaderTemplate: "Người thực hiện: #= getImplementerDisplayName(value) #", hidden: hidden },
                    { field: "ProgressStatusId", title: "Trạng thái tiến độ", editor: progressStatusEditor, template: "#= getProgressStatus(ProgressStatusId) #", groupHeaderTemplate: "Trạng thái tiến độ: #= getProgressStatus(value) #" },
                    { field: "Note", title: "Ghi chú", editor: textareaEditor },
                    { command: [{ name: "destroy", title: "&nbsp;", text: "Xóa" }] }
                ],
                editable: true
            });
        }
        Date.prototype.addDays = function (days) {
            this.setDate(this.getDate() + days);
            return this;
        };
        var textareaEditor = function (container, options) {
            $('<textarea class="k-input k-textbox" data-bind="value:' + options.field + '" />')
                .appendTo(container);
        };

        function getImplementerDepartmentName(id) {
            var departmentName = "";
            $.each(implementerDepartmentDataSource._data, function () {
                if (this.Id == id) {
                    departmentName = this.DepartmentName;
                }
            });
            return departmentName;
        }

        var implementerDepartmentDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetDepartment",
                    type: "post"
                }
            }
        });

        function implementerDepartmentEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DepartmentName",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: implementerDepartmentDataSource
                });
        }

        function getImplementerDisplayName(userName) {
            var displayName = "";
            $.each(implementerUserDataSource._data, function () {
                if (this.UserName == userName) {
                    displayName = this.DisplayName;
                }
            });
            return displayName;
        }

        var implementerUserDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetUser",
                    type: "post"
                }
            }
        });

        function implementerUserEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DisplayName",
                    dataValueField: "UserName",
                    optionLabel: "-Chọn-",
                    dataSource: implementerUserDataSource
                });
        }

        function getProgressStatus(id) {
            var status = "";
            $.each(progressStatusDataSource._data, function () {
                if (this.Id == id) {
                    status = this.Status;
                }
            });
            return status;
        }

        var progressStatusDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Home/GetProgressStatus",
                    type: "post"
                }
            }
        });

        function progressStatusEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "Status",
                    dataValueField: "Id",
                    optionLabel: "-Chọn-",
                    dataSource: progressStatusDataSource
                });
        }
    </script>

}
